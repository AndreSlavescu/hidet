name: Tests

on:
  push:
    branches: [main]

  pull_request:
  workflow_call:
  workflow_dispatch:
    inputs:
      runner_group:
        type: choice
        options:
          - arc-l4
          - arc-a10
          - arc-h100
        description: "Runner group to run tests. (arc-l4, arc-a10, arc-h100)"
        required: false
        default: arc-l4

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:

  build-docs:
    runs-on:
      group: ${{ inputs.runner_group || 'arc-l4' }}
    container:
      image: nvidia/cuda:12.6.2-devel-ubuntu22.04
      options: --gpus all
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Build docs
        id: build_step
        uses: ./.github/actions/build-docs

  build-wheel:
    outputs:
      wheel_name: ${{ steps.build_step.outputs.wheel_name }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Get the version
        id: get_version
        run: echo "VERSION=0.0.1.dev${{ github.run_id }}" >> $GITHUB_OUTPUT

      - name: Build Hidet Wheel
        id: build_step
        uses: ./.github/actions/build-wheel
        with:
          version: ${{ steps.get_version.outputs.VERSION }}

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build_step.outputs.wheel_name }}
          path: ${{ steps.build_step.outputs.wheel_path }}
          retention-days: 3
          if-no-files-found: "error"

  list-test-dirs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Hidet
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - id: set-matrix
        run: |
          python .github/scripts/set_test_matrix.py

  run-test:
    needs: [list-test-dirs, build-wheel]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.list-test-dirs.outputs.matrix) }}
    runs-on:
      group: ${{ inputs.runner_group || 'arc-l4' }}
    container:
      image: nvidia/cuda:12.6.2-devel-ubuntu22.04
    steps:
      - name: Install dependencies via apt
        run: |
          apt update && DEBIAN_FRONTEND=noninteractive apt install -y ccache git graphviz

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Download wheel
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-wheel.outputs.wheel_name }}

      - name: Setup Hidet from Wheel
        run: |
          pip install -r requirements-dev.txt
          pip install ${{ needs.build-wheel.outputs.wheel_name }}

      - name: List installed packages
        run: |
          pip list

      - name: Run tests
        run: |
          rm -rf ~/.config/hidet
          python -m pytest -v --durations=20 --clear-cache ${{ matrix.path }}

  run-test-amdgpu:
    if: |
      (github.event.pull_request &&
      (contains(github.event.pull_request.body, '$ hidet-ci amdgpu') ||
      contains(github.event.pull_request.comments.*.body, '$ hidet-ci amdgpu')))
    needs: [build-wheel]
    runs-on:
      # on self-hosted runner
      [self-hosted, rocm]
    container:
      # see https://rocm.docs.amd.com/projects/install-on-linux/en/latest/how-to/docker.html#docker-access-gpus-in-container
      # for running AMD GPU applications in Docker containers
      image: rocm/dev-ubuntu-22.04
      options: --device /dev/kfd --device /dev/dri --security-opt seccomp=unconfined
    steps:
      - name: Install dependencies via apt
        run: |
          apt update && DEBIAN_FRONTEND=noninteractive apt install -y ccache git graphviz

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Download wheel
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-wheel.outputs.wheel_name }}

      - name: Setup Hidet from Wheel
        run: |
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm6.2
          pip install -r requirements-dev.txt
          pip install ${{ needs.build-wheel.outputs.wheel_name }}

      - name: List installed packages
        run: |
          pip list

      - name: Run tests
        run: |
          rm -rf ~/.config/hidet
          python -m pytest -v --durations=20 --clear-cache tests

  final-status-indicator:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Pass All Functional Tests
    needs: [run-test, run-test-amdgpu]
    steps:
      - run: exit 1
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
